name: build-scan

on:
  workflow_call:
    inputs:
      enable_trivy:
        required: false
        type: boolean
        default: true
      enable_hadolint:
        required: false
        type: boolean
        default: true
      trivy_nofail:
        required: false
        type: boolean
        default: false

permissions:
  security-events: write

jobs:
  hadolint_scan:
    runs-on: self-hosted
    if: inputs.enable_hadolint
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Dockerfile Linting
      uses: hadolint/hadolint-action@v3.1.0
      with:
        output-file: hadolint-result.sarif
        format: sarif
        no-fail: true
    - name: Upload linting results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: hadolint-result.sarif

  build:
    runs-on: self-hosted
    needs:
      - hadolint_scan
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build image artifact
        id: build
        env:
          REGISTRY: 10.89.2.2:5000/podinfo
        run: |
          IMAGE=${REGISTRY}:${GITHUB_SHA}
          docker build -t ${IMAGE} .
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          
  trivy_scan:
    runs-on: self_hosted
    needs: build
    if: inputs.enable_trivy
    steps:
      - name: Create Trivy config
        run: |
          cat <<EOF > /tmp/trivy.yaml
          format: sarif
          output: trivy-results.sarif
          vulnerability:
            ignore-unfixed: true
            type:
              - os
              - library
          severity:
            - CRITICAL
            - HIGH
            - MEDIUM
          db:
            repository: index.docker.io/aquasec/trivy-db:2
          EOF
      - name: Determine if we should fail the pipeline when Vulnerability found
        run: |
          if [[ "${{ inputs.trivy_nofail }}" == "false" ]]; then
            echo "exit-code: '1'" >> /tmp/trivy.yaml; else
            echo "exit-code: '0'" >> /tmp/trivy.yaml;
          fi
      - name: Run Trivy vulnerability scanner - Without ignore
        uses: aquasecurity/trivy-action@0.28.0
        if: ${{ hashFiles('.trivyignore') == '' }}
        with:
          image-ref: ${{ steps.build.outputs.image }}
          trivy-config: /tmp/trivy.yaml
      - name: Run Trivy vulnerability scanner - With ignore
        uses: aquasecurity/trivy-action@0.28.0
        if: ${{ hashFiles('.trivyignore') != '' }}
        with:
          image-ref: ${{ steps.build.outputs.image }}
          trivy-config: /tmp/trivy.yaml
          trivyignores: .trivyignore
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  push_artifact:
    runs-on: self_hosted
    needs: 
      - build
      - trivy_scan
    steps:
      - name: Push image artifact
        id: push-artifact
        run: |
          docker push ${IMAGE}
        env:
          IMAGE: ${{ steps.build.outputs.image  }}
